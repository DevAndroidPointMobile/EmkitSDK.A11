package device.common;

import android.graphics.Rect;
import device.common.CenterWindowRect;
import device.common.DecodeResult;
import device.common.EngineConfig;
import device.common.ExposureSettings;
import device.common.OCRProperty;
import device.common.StyleConfig;
import device.common.ConditionConfig;
import device.common.ActionConfig;
import device.common.CustomIntentConfig;
import device.common.IDecodeStateCallback;

interface IScannerService {
    void aDecodeSetDecodeEnable(int enable);
    void aDecodeSetDecodeEnableEx(int enable, int caller);
    void aDecodeNotifyState(int state);
    void aDecodeAPIInit();
    void aDecodeAPIDeinit();
    int aDecodeAPIGetVersion();
    int aDecodeGetModuleType();
    String aDecodeGetModuleName();
    String aDecodeGetModuleVersion();
    String aDecodeGetAPIVersion();
    String aDecodeGetDriverVersion();
    int aDecodeGetSupport2D();
    String aDecodeGetSerialNumber();
    String aDecodeGetFocusType();
    void aDecodeOemInit();
    void aDecodeSetDefaultAll();
    int aDecodeGetDecodeEnable();
    void aDecodeSetResultType(int enable);
    int aDecodeGetResultType();
    void aDecodeSetResultSymIdEnable(int enable);
    int aDecodeGetResultSymIdEnable();
    void aDecodeGetResult(inout DecodeResult decodeResult);
    void aDecodeSetPrefixEnable(int enable);
    int aDecodeGetPrefixEnable();
    void aDecodeSetPrefix(String prfix);
    String aDecodeGetPrefix();
    void aDecodeSetPostfixEnable(int enable);
    int aDecodeGetPostfixEnable();
    void aDecodeSetPostfix(String postfix);
    String aDecodeGetPostfix();
    void aDecodeSetCharset(String charset);
    String aDecodeGetCharset();
    void aDecodeSetTerminator(int terminator);
    int aDecodeGetTerminator();
    void aDecodeSetPEWEnable(int enable);
    int aDecodeGetPEWEnable();
    int aDecodeGetStyleTotalCount();
    void aDecodeSetStyle(in StyleConfig styleInfo, int styleOrder);
    void aDecodeGetStyle(out StyleConfig styleInfo, int styleOrder);
    void aDecodeAddStyle(in StyleConfig styleInfo);
    void aDecodeDeleteStyle(int styleOrder);
    void aDecodeSetCondition(in ConditionConfig conditionInfo, int styleOrder);
    void aDecodeGetCondition(out ConditionConfig conditionInfo, int styleOrder);
    void aDecodeSetAction(in ActionConfig actionInfo, int styleOrder, int actionOrder);
    void aDecodeGetAction(out ActionConfig actionInfo, int styleOrder, int actionOrder);
    void aDecodeAddAction(in ActionConfig actionInfo, int styleOrder);
    void aDecodeDeleteAction(int styleOrder, int actionOrder);
    String aDecodeGetActionName(int actionIndex);
    void aDecodeSetTriggerMode(int triggerMode);
    int aDecodeGetTriggerMode();
    void aDecodeSetTriggerInterval(int triggerInterval);
    int aDecodeGetTriggerInterval();
    void aDecodeSetTriggerOn(int triggerOn);
    void aDecodeSetTriggerEnable(int enable);
    int aDecodeGetTriggerEnable();
    void aDecodeSetTriggerTimeout(int triggerTimeout);
    int aDecodeGetTriggerTimeout();
    void aDecodeSetLedEnable(int enable);
    int aDecodeGetLedEnable();
    void aDecodeSetBeepEnable(int enable);
    int aDecodeGetBeepEnable();
    void aDecodeOpenBeepFile(in String path);
    void aDecodeWriteBeepFile(in byte[] buffer);
    void aDecodeCloseBeepFile();
    void aDecodeSetBeepSuccessFile(String beepSuccessFile);
    String aDecodeGetBeepSuccessFile();
    void aDecodeSetBeepFailFile(String beepFailFile);
    String aDecodeGetBeepFailFile();
    void aDecodeSetVibratorEnable(int enable);
    int aDecodeGetVibratorEnable();
    void aDecodeSetVibratorSuccessInterval(int vibratorSuccessInterval);
    int aDecodeGetVibratorSuccessInterval();
    void aDecodeSetVibratorFailInterval(int vibratorFailInterval);
    int aDecodeGetVibratorFailInterval();
    void aDecodeSymSetEnable(int symIndex, int enable);
    int aDecodeSymGetEnable(int symIndex);
    String aDecodeSymGetName(int symIndex);
    int aDecodeSymGetMinMaxEnable(int symIndex);
    void aDecodeSymSetMin(int symIndex, int min);
    int aDecodeSymGetMin(int symIndex);
    void aDecodeSymSetMax(int symIndex, int max);
    int aDecodeSymGetMax(int symIndex);
    int aDecodeSymGetDefaultMin(int symIndex);
    int aDecodeSymGetDefaultMax(int symIndex);
    int aDecodeSymGetRangeMin(int symIndex);
    int aDecodeSymGetRangeMax(int symIndex);
    void aDecodeSymSetSymId(int symIndex, char symId);
    char aDecodeSymGetSymId(int symIndex);
    int aDecodeSymGetLocalPropCount(int symIndex);
    String aDecodeSymGetLocalPropName(int symIndex, int localPropIndex);
    int aDecodeSymGetLocalPropChain(int symIndex, int localPropIndex);
    void aDecodeSymSetLocalPropEnable(int symIndex, int localPropIndex, int enable);
    int aDecodeSymGetLocalPropEnable(int symIndex, int localPropIndex);
    void aDecodeSetClockMode24Mhz(int enable);
    int aDecodeGetClockMode24Mhz();
    void aDecodeSetExposureSettings(in ExposureSettings exposureSetting);
    void aDecodeGetExposureSettings(out ExposureSettings exposureSetting);
    void aDecodeSetOCRTemplates(in OCRProperty OCRTemplates);
    void aDecodeGetOCRTemplates(out OCRProperty OCRTemplates);
    boolean aDecodeImageStreamInit();
    boolean aDecodeImageStreamStart();
    int aDecodeImageStreamRead(out byte[] buffer);
    boolean aDecodeImageStreamStop();
    int aDecodeImageStreamGetWidth();
    int aDecodeImageStreamGetHeight();
    int aDecodeImageCapture(out byte[] buffer);
    int aDecodeImageCaptureGetWidth();
    int aDecodeImageCaptureGetHeight();
    void aDecodeImageTestMode(boolean enabled);
    boolean aDecodeSetScanImageMode(int imageMode);
    int aDecodeGetScanImageMode();
    void aDecodeSetCenterWindowEnable(int enable);
    int aDecodeGetCenterWindowEnable();
    void aDecodeSetCenterWindowTolerance(int tolerance);
    int aDecodeGetCenterWindowTolerance();
    void aDecodeSetDecodeMode(int decodeMode);
    int aDecodeGetDecodeMode();
    void aDecodeSetDecodeDelay(int delayMillisecond);
    int aDecodeGetDecodeDelay();
    void aDecodeImageSetLightMode(int lightMode);
    int aDecodeImageGetLightMode();
    void aDecodeSetAimOn(int aimOn);
    int aDecodeGetAimOn();
    void aDecodeSetIllumOn(int illumOn);
    int aDecodeGetIllumOn();
    void aDecodeSetIllumLevel(int level);
    int aDecodeGetIllumLevel();
    void aDecodeGetEngineConfig(out EngineConfig enginConfig); 
    void aDecodeSetLinearSecurityLevel(int linearSecurityLevel);
    int aDecodeGetLinearSecurityLevel();
    void aDecodeSetBidirectionalMode(int bidirectionalMode);
    int aDecodeGetBidirectionalMode();
    void aDecodeSetPowerSaveMode(int powerSaveMode);
    int aDecodeGetPowerSaveMode();
    void aDecodeSetPowerSaveTimeOut(int powerSaveTimeOut);
    int aDecodeGetPowerSaveTimeOut();
    void aDecodeSymSetRedundancy(int symIndex, int redundancy);
    int aDecodeSymGetRedundancy(int symIndex);
    void aDecodeSetImagerPower(int enable);
    int aDecodeGetImagerPower();
    void aDecodeSetMultipleConfirm(int multiConfirm);
    int aDecodeGetMultipleConfirm();
    void aDecodeSetScanAngle(int scanAngle);
    int aDecodeGetScanAngle();
    void aDecodeSetAdaptiveScanningMode(int adaptiveScanning);
    int aDecodeGetAdaptiveScanningMode();
    void aDecodeSetAimerEnable(int enable);
    int aDecodeGetAimerEnable();
    void aDecodeSetAimerTimeOut(int timeout);
    int aDecodeGetAimerTimeOut();
    void aDecodeSetDefaultEnable(int defaultEnable);
    int aDecodeGetDefaultEnable();
    void aDecodeSetResultAimIdEnable(int enable);
    int aDecodeGetResultAimIdEnable();
    void aDecodeSetGroupSeparator(int separator);
    int aDecodeGetGroupSeparator();
    void aDecodeSwitchPower(int isSuspend);
    void aDecodeSetRedundancyLevel(int level);
    int aDecodeGetRedundancyLevel();
    void aDecodeSetSecurityLevel(int level);
    int aDecodeGetSecurityLevel();
    void aDecodeSetInverse1DMode(int mode);
    int aDecodeGetInverse1DMode();
    void aDecodeSet1DQuietZoneLevel(int level);
    int aDecodeGet1DQuietZoneLevel();
    void aDecodeSetIntercharacterGapSize(int size);
    int aDecodeGetIntercharacterGapSize();
    void aDecodeSetPhoneDisplayMode(int enable);
    int aDecodeGetPhoneDisplayMode();
    boolean aDecodeGetCameraBusy();
    boolean aRegisterDecodeStateCallback(in IDecodeStateCallback callback);
    boolean aUnregisterDecodeStateCallback(in IDecodeStateCallback callback);
    int aDecodeGetLastError();
    void aDecodeRestore1DSetting();
    void aDecodeSetSameReadDataValidation(int level);
    int aDecodeGetSameReadDataValidation();
    boolean aDecodeSendArbitraryCommand(in byte[] command);
    void aDecodeSetParameter(int tag, int value);
    int aDecodeGetParameter(int tag);
    void aDecodeSetCustomIntentConfig(in CustomIntentConfig customIntentInfo);
    void aDecodeGetCustomIntentConfig(out CustomIntentConfig customIntentInfo);
    void aDecodeStartLaserCalibration();
    void aDecodeEndLaserCalibration();
    void aDecodeSetLaserFocusEnable(int enable);
    int aDecodeGetLaserFocusEnable();
    void aDecodeSetMultiScanNumber(int number);
    int aDecodeGetMultiScanNumber();
    void aDecodeSetMultiScanSeparator(char separator);
    char aDecodeGetMultiScanSeparator();
    void aDecodeSetBatteryTestMode(int mode);
    boolean aDecodeForceChangeScanner(int scanenrType);
    String aDecodeGetPSOCVersion();
    void aDecodeSetParameterEx(int number, in int[] tags, in int[] values);
    int aDecodeGetParameterEx(out int[] tags, out int[] values);
    boolean aDecodeImageStreamInitEx(in Rect imgRect, int resizeResolution);
    void aDecodeSetScanKeyStartUp(int enable);
    int aDecodeGetScanKeyStartUp();
    void aDecodeSetScanKeyStartUpTime(int scanKeyStartUpTime);
    int aDecodeGetScanKeyStartUpTime();
    void aDecodeSetAimerBlinkEnable(int enable);
    int aDecodeGetAimerBlinkEnable();
    int aDecodeGetLastSingleScanMode();
}
