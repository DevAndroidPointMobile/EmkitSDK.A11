package device.common;

/* TODO: Commented out for not including WifiConfiguration
import android.net.wifi.WifiConfiguration;
*/

interface IDeviceService {
    String getHardwareRevision();
    String getAndroidVersion();
    String getKernelVersion();
    String getBuildNumber();
    String getSDKVersion();
    String getManufacturer();
    String getModelName();
    String getProcessorInfo();
    String getSerialNumber();
    String getPartNumber();
    String getModelNumber();
    String getManufactureDate();
    String getXloaderImageVersion();
    String getBootloaderImageVersion();
    String getKernelImageVersion();
    String getRecoveryImageVersion();
    String getAndroidImageVersion();
    int getMajorNumber();
    String getDeviceName();
    String getModuleName(int index);
    int getCameraType();
    int getCameraSecondType();
    int getDisplayType();
    int getKeyboardType();
    int getNandType();
    int getScannerType();
    int getTouchType();
    int getRfidType();
    int getBluetoothType();
    int getGpsType();
    int getPhoneType();
    int getWifiType();
    int getSensorAccelerometerType();
    int getSensorLightType();
    int getSensorProximityType();
    int getSensorCpuTemperatureType();
    int getSensorGyroscopeType();
    int getSensorMagneticFieldType();
    int getSensorPressureType();
    int getMsrType();
    int getFingerprintType();
    int getBluetoothStatus();
    int getGpsStatus();
    int getPhoneStatus();
    int getWifiStatus();
    String getTouchFirmwareVersion();
    String getCameraFirmwareVersion(String cameraModule);
    String getRfidFirmwareVersion();
    String getRfidSerialNumber();
    String getRfidSamInfo(int index);
    String getBluetoothDriverVersion();
    String getBluetoothMacAddress();
    String getWifiDriverVersion();
    String getWifiFirmwareVersion();
    String getWifiConfigurationDataVersion();
    String getWifiMacAddress();
    String getWifiIpAddress();
    String getMainBatteryStatus();
    String getBackupBatteryStatus();
    String getBatterySerialNumber();
    String getChargingMainBatteryFromUsbFlag();
    String getChargingBackupBatteryFromMainBatteryFlag();
    String getLowBatteryWarningLevel();
    String getCriticalBatteryWarningLevel();
    String getExpansion5vPower();
    void setExpansion5vPower(boolean enabled);
    String getExpansion3p3vPower();
    void setExpansion3p3vPower(boolean enabled);
    String getExpansionGpio();
    void setExpansionGpio(boolean enabled);
    String getGpsPower();
    void setGpsPower(boolean enabled);
    String getStyluspenMode();
    void setStyluspenMode(boolean enabled);
    int getScannerClass(int scanner);
    String getScannerName(int scanner);
    String getScannerClassName(int scanner);
    boolean getOnlyHardKeyboardEnabled();
    void setOnlyHardKeyboardEnabled(boolean enabled);
    boolean getNavigationBarHide();
    void setNavigationBarHide(boolean enabled);
    byte[] getCustomerMfgData();
    boolean setCustomerMfgData(in byte[] data);
    String getCustomerMfgStringData();
    boolean setCustomerMfgStringData(String data);
    boolean getAdbEnabled();
    void setAdbEnabled(boolean enabled);
    int getVibrateIntensity();
    void setVibrateIntensity(int level);
    boolean getKeyboardBacklightEnabled();
    void setKeyboardBacklightEnabled(boolean enabled);
    int getTouchSensitivityValue();
    void setTouchSensitivityValue(int sensitivity);
    boolean getVibrateOnTouchEnabled();
    void setVibrateOnTouchEnabled(boolean enabled);
    void setGpsAlwaysOn(boolean enable);
    void setGpsAlwaysOff(boolean enable);
    String getNtpServer();
    void setNtpServer(String address);
    void lockNow(boolean go2sleep);
    boolean getExtensionBrightness();
    void setExtensionBrightness(boolean enabled);
    void setEnable11d(boolean enable);
    boolean getEnable11d();
    boolean set24GHzChannelList(in int[] channelList);
    int[] get24GHzChannelList();
    boolean set5GHzChannelList(in int[] channelList);
    int[] get5GHzChannelList();
    void setCountryCode(String country, boolean persist);
    String getCountryCode();
    void setWLANPowerSaveMode(boolean enable);
    boolean getWLANPowerSaveMode();
    void setCCXSupporting(boolean enable);
    boolean getCCXSupporting();
    void setSendDeauthBeforeConnect(boolean enable);
    boolean getSendDeauthBeforeConnect();
    void setBackgroundScanTrigger(int level);
    int getBackgroundScanTrigger();
    void setRoamingTrigger(int level);
    int getRoamingTrigger();
    int getWiFiRadioPolicy();
    boolean setWiFiRadioPolicy(int policy);
    void setInternetAccessCheck(boolean enable);
    boolean getInternetAccessCheck();
    void setKeepAliveMode(boolean enable);
    boolean getKeepAliveMode();
    void setInterSubnetRoaming(boolean enable);
    boolean getInterSubnetRoaming();
    void setWifiScanThrottling(boolean enable);
    boolean getWifiScanThrottling();
    void setEnabledScreenCapture(boolean enabled);
    boolean isEnabledScreenCapture();
    boolean isRestricted();
    void setUserRestriction(String key, boolean value);
    boolean hasUserRestriction(String restrictionKey);
    boolean setNonMarketAppsAllowed(boolean enabled);
    boolean isNonMarketAppsAllowed();
    void setNonMarketAppsAllowedOption(boolean enabled);
    boolean isNonMarketAppsAllowedOption();
    int setNfcEnabled(boolean enabled);
    int getNfcEnabled();
    void setNfcEnabledOption(boolean enabled);
    boolean isNfcEnabledOption();
    int getScreenBrightnessMax();
    int getScreenBrightness();
    void setScreenBrightness(boolean tracking, int value);
    boolean areAllRotationsAllowed();
    boolean isRotationLockToggleVisible();
    int getRotationLockOrientation();
    boolean isRotationLocked();
    void setRotationLock(in boolean locked);
    int getScreenOffTimeout();
    boolean setScreenOffTimeout(int timeout);
    boolean isEnabledStayAwake();
    void setEnabledStayAwake(boolean enabled);
    String getMockLocationApp();
    boolean setMockLocationApp(String packageName);
    boolean isUninstallBlocked(String packageName);
    void setUninstallBlocked(String packageName, boolean uninstallBlocked);
    boolean isApplicationHidden(String packageName);
    boolean setApplicationHidden(String packageName, boolean hidden);
    void setApplicationEnabledSetting(String packageName, int newState);
    void deletePackage(String packageName, int flags);
    boolean isStreamAffectedByRingerMode(int streamType);
    int getRingerModeInternal();
    int getStreamMaxVolume(int streamType);
    int getStreamVolume(int streamType);
    int getLastAudibleStreamVolume(int streamType);
    boolean isStreamMute(int streamType);
    void adjustStreamVolume(int streamType, int direction, int flags);
    void setStreamVolume(int streamType, int index, int flags);
    boolean isVolumeFixed();
    int getEnabledOtherSounds(int soundType);
    void setEnabledOtherSounds(int soundType, int value);
    boolean isAirplaneModeOn();
    void setAirplaneModeOn(boolean enabling);
    int getWifiSleepPolicy();
    void setWifiSleepPolicy(int sleepPolicy);
    int getWifiState();
    boolean setWifiEnabled(boolean enabled);
    int getWifiApState();
    boolean isWifiApEnabled();
    // TODO: Commented out for not including WifiConfiguration
    // 20210817 mik.lee [#19425][SDK] SDK Checklist
    // Deprecated after Android 9
    boolean setWifiApEnabled(boolean enabled);
    boolean writeBytesToSystemFile(String dest, in byte[] buffer);
    boolean isEnabledOtherSoundsAll();
    void setEnabledOtherSoundsAll(boolean enabled);
    void setAutoJoin(boolean enable);
    boolean isAutoJoin();
    void reboot(boolean confirm, String reason, boolean wait);
    int getReconnectionInterval();
    boolean setReconnectionInterval(int reconnectionInterval);
/* TODO: Commented out for not including WifiConfiguration
    void saveWifiConfig(in WifiConfiguration config);
*/
    void setEnableFOTAClientMenu(int enabled);
    int getEnableFOTAClientMenu();
    void setEnableAirplaneModeMenu(int enabled);
    int getEnableAirplaneModeMenu();
    boolean setUsbPriority(int usbType);
    int getUsbPriority();
    void setDataEnabled(boolean enable);

    boolean isRestrictedMtp();
    boolean setRestrictedMtp(boolean enabled);
    void setDhcpNtpServer(int enabled);
    int getDhcpNtpServer();

    // START 2019.04.24 Merged hostname UI from PM85
    String getHostname();
    boolean setHostname(String hostname);
    // END 2019.04.24 Merged hostname UI from PM85
    boolean addWifiSsidsToWhiteList(in List<String> ssid);
    boolean clearWifiSsidsFromWhiteList();
    List<String> getWifiSsidsFromWhiteLists();
    boolean removeWifiSsidsFromWhiteList(in List<String> ssid);

    boolean setJeitaTestMode(int mode);
    int getJeitaTestMode();
    boolean setPowerSaveModeJEITA(boolean enabled);
    boolean getPowerSaveModeJEITA();
    // 20200527 mik.lee [#16420][Mobile] Modified Implemented ECT
    void explicitCallTransfer(int phoneId);

    void shutdown(boolean confirm, String reason, boolean wait);

    boolean setHotspot();
    boolean setHotspotSSID(String ssid);
    boolean setHotspotSecurityMode(int securityMode);
    boolean setHotspotPassphraseEncrypted(String passPhrase);
    boolean setHotspotBand(int band);
    boolean stopHotspot();
    boolean getHotspotStatus();

    void setWFCmode(boolean enable);
    boolean getWFCMode();
    void setWFCPreferredMode(int preferredMode);
    int getWFCPreferredMode();
    void setEnhanced4GLTEMode(boolean enabled);
    boolean getEnhanced4GLTEMode();

    void doMasterClear(boolean eraseSdCard, boolean eraseEsims);

    boolean isSupported(String name);
    String getDefines(String name);
    int getSysResId(String name);
    boolean hasFeature(String name);
    int getUhfRfidType();
    int getIccrType();
    int getSamType();
    int getFiscalType();

    String getMainBatteryCurrent();
    String getMainBatteryRealSoc();
    String getBackupBatteryPercentage();
    String getBackupBatteryVoltage();
}
